name: Build Debian APT repository

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  REPO_NAME: daniele-athome-my
  CODENAME: trixie
  COMPONENTS: main
  ARCHITECTURES: amd64

jobs:
  build-moonlight-qt:
    name: Build moonlight-qt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build moonlight-qt
        run: |
          docker build -t build-moonlight-qt moonlight-qt

      - name: Extract Debian package from image
        run: |
          container_id=$(docker create build-moonlight-qt)
          docker cp "$container_id:/out/moonlight-qt_6.1.0-3_amd64.deb" .
          docker rm "$container_id"

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: moonlight-qt-deb
          path: ./moonlight-qt_6.1.0-3_amd64.deb

  build-kodi:
    name: Build kodi
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build kodi
        run: |
          docker build -t build-kodi kodi

      - name: Extract Debian package from image
        run: |
          container_id=$(docker create build-kodi)
          docker cp "$container_id:/out/kodi-bin_21.2+dfsg-1_amd64.deb" .
          docker rm "$container_id"

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: kodi-deb
          path: ./kodi-bin_21.2+dfsg-1_amd64.deb

  build-repository:
    name: Create APT repository
    needs:
      - build-kodi
      - build-moonlight-qt
    runs-on: ubuntu-latest

    outputs:
      artifact_id: ${{ steps.upload-artifact.outputs.artifact-id }}
      keyring: ${{ steps.create-apt-repo.outputs.keyring }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Retrieve kodi packages
        uses: actions/download-artifact@v4
        with:
          name: kodi-deb
          path: repo

      - name: Retrieve moonlight-qt packages
        uses: actions/download-artifact@v4
        with:
          name: moonlight-qt-deb
          path: repo

      - uses: morph027/apt-repo-action@v2
        id: create-apt-repo
        with:
          repo-name: ${{ env.REPO_NAME }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          codename: ${{ env.CODENAME }}
          components: ${{ env.COMPONENTS }}
          architectures: ${{ env.ARCHITECTURES }}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: ${{ steps.create-apt-repo.outputs.dir }}

  deploy-repository:
    name: Deploy APT repository
    needs: build-repository
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Adding summary
        run: |
          echo ':rocket:' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'curl -sfLo /etc/apt.trusted.gpg.d/${{ needs.build.outputs.keyring }}.asc ${{ steps.deploy-pages.outputs.page_url }}gpg.key' >> $GITHUB_STEP_SUMMARY
          echo 'echo "deb ${{ steps.deploy-pages.outputs.page_url }} ${{ env.CODENAME }} ${{ env.COMPONENTS }}" >/etc/apt/sources.list.d/${{ env.REPO_NAME }}.list' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
